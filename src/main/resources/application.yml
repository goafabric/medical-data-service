#application
server:
  port: 50500
  tomcat.threads.max: 20
  forward-headers-strategy: FRAMEWORK

#monitoring
management:
  endpoint:
    health:
      show-details: never
  endpoints:
    web:
      exposure:
        include: "health,prometheus,heapdump"

#tracing
spring.application.name: core-service
management.tracing.sampling.probability: "1.0"
logging.level.io.opentelemetry: "OFF"
management.otlp.tracing.endpoint: "http://localhost:4318/v1/traces"

#persistence
spring.datasource.url: jdbc:h2:mem:core;DATABASE_TO_UPPER=FALSE
#spring.datasource.url: jdbc:postgresql://localhost:5432/postgres
spring.datasource.username: postgres
spring.datasource.password: postgres

spring.datasource.hikari.maximum-pool-size: "10"
spring.datasource.hikari.connection-timeout: "10000"

multi-tenancy.tenants: "0,5"
multi-tenancy.schema-prefix: "core_"
database.provisioning.goals: "-migrate -import-demo-data"

#nosql databases
spring.autoconfigure.exclude: ${mongodb.autoconfiguration},${elasticsearch.autoconfiguration}
spring.data.mongodb.uri: "mongodb://mongodb:mongodb@localhost:27017/core?authSource=admin"


mongodb.autoconfiguration: "org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration"
elasticsearch.autoconfiguration: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration, org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchRestHealthContributorAutoConfiguration"

#kafka
spring:
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      properties.spring.json.trusted.packages: "*"
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    template:
      observation-enabled: true
    listener:
      observation-enabled: true

#logging
logging.pattern.level: "%5p tenantId=%X{tenantId:-}" #"%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] tenantId=%X{tenantId:-}"

logging.level.root: "WARN"
logging.level.org.springframework: "INFO"

logging.level.org.goafabric: "INFO"
logging.level.org.flywaydb.core: "INFO"
logging.level.org.hibernate.SQL: "INFO"
